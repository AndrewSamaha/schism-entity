type Entity {
    id: ID
    name: String
    longName: String
    speed: Float
    ownerId: String
    position: Position
    color: String
}

input EntityInput {
    id: ID!
    name: String
    longName: String
    speed: Float
    ownerId: String
    position: PositionInput
    color: String
}

type Mutation {
    updateEntity(entity: EntityInput!): Boolean
    insertEntity(entity: EntityInput!): Boolean
    upsertEntities(entities: [EntityInput]!): [Boolean]
}

type Query {
    getEntityById(id: ID!): [Entity]!
    getEntitiesInChunk(chunk: ChunkInput!): [Entity]!
    getEntitiesByOwner(ownerId: ID!): [Entity]!
    getEntitiesNearPosition(position: PositionInput!, range: Int): [Entity]!
    getAllEntities: [Entity]!
    getMyEntities: [Entity]!
    getEntitiesICanSee: [Entity]!
}